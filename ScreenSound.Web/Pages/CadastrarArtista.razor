@page "/CadastrarArtista"
@using ScreenSound.Web.Requests
@inject ArtistaService artistaService;
@inject NavigationManager navigationManager;

<PageTitle>Cadastrar Artista</PageTitle>

<MudPaper Class="px-8 pt-2 pb-4 mx-12 my-8" Justify="Justify.Center">

	<MudText Class="mt-8" Typo="Typo.h4">Cadastro do Artista</MudText>

	<MudForm @ref="_form" @bind-IsValid="_success">

		<MudTextField Class="mt-4" T="string" Placeholder="Nome do Artista"
					  @bind-Value="nome"
					  Variant="Variant.Outlined"
					  Required="true"
					  RequiredError="Campo obrigatório." />

		<MudTextField Class="mt-4" T="string" Placeholder="Biografia do artista"
					  @bind-Value="biografia"
					  Variant="Variant.Outlined"
					  Lines="4"
					  Required="true"
					  RequiredError="Campo obrigatório." />

		<MudImage Class="mt-4" src="@fileImage" />
		<MudFileUpload T="IBrowserFile" Accept=".jpeg" FilesChanged="UploadImagem">
			<ButtonTemplate>
				<MudButton HtmlTag="label"
						   Variant="Variant.Filled"
						   Color="Color.Primary"
						   StartIcon="@Icons.Material.Filled.PhotoCamera"
						   for="@context">
					Foto de Perfil
				</MudButton>
			</ButtonTemplate>
		</MudFileUpload>
		<div class="d-flex align-center justify-space-between mt-4">
			<MudButton Variant="Variant.Filled"
					   @onclick="Cadastrar"
					   Color="Color.Primary"
					   StartIcon="@Icons.Material.Filled.NewReleases"
					   Class="ml-auto">
				Cadastrar
			</MudButton>

			<MudButton Variant="Variant.Filled"
					   @onclick="VoltarListagemArtistas"
					   Color="Color.Info"
					   StartIcon="@Icons.Material.Filled.ArrowBack"
					   Class="ml-3">
				Voltar
			</MudButton>
		</div>

	</MudForm>
</MudPaper>

@code {
	private MudForm _form;
	private bool _success;

	private string? nome;
	private string? biografia;

	private string? fileImage;
	private string? fotoPerfil;

	private async Task Cadastrar()
	{
		var artista = new ArtistaRequest(nome!, biografia!, fotoPerfil);
		await artistaService.CadastrarArtistaAsync(artista);
		navigationManager.NavigateTo("/Artistas");
	}

	private void VoltarListagemArtistas()
	{
		navigationManager.NavigateTo("/Artistas");
	}

	private async Task UploadImagem(IBrowserFile file)
	{
		var format = "image/jpeg";
		var resizedImage = await file.RequestImageFileAsync(format, 200, 200);

		using var fileStream = resizedImage.OpenReadStream();
		using var memoryStream = new MemoryStream();
		await fileStream.CopyToAsync(memoryStream);
		var imageUpload = Convert.ToBase64String(memoryStream.ToArray());
		fotoPerfil = imageUpload;
	}
}
